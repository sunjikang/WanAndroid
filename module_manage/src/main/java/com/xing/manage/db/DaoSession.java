package com.xing.manage.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.xing.manage.bean.device.Area;
import com.xing.manage.bean.device.Facility;
import com.xing.manage.bean.device.Inspection;
import com.xing.manage.bean.device.Line;
import com.xing.manage.db.CheckNow;
import com.xing.manage.db.Resource;

import com.xing.manage.db.AreaDao;
import com.xing.manage.db.FacilityDao;
import com.xing.manage.db.InspectionDao;
import com.xing.manage.db.LineDao;
import com.xing.manage.db.CheckNowDao;
import com.xing.manage.db.ResourceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig areaDaoConfig;
    private final DaoConfig facilityDaoConfig;
    private final DaoConfig inspectionDaoConfig;
    private final DaoConfig lineDaoConfig;
    private final DaoConfig checkNowDaoConfig;
    private final DaoConfig resourceDaoConfig;

    private final AreaDao areaDao;
    private final FacilityDao facilityDao;
    private final InspectionDao inspectionDao;
    private final LineDao lineDao;
    private final CheckNowDao checkNowDao;
    private final ResourceDao resourceDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        areaDaoConfig = daoConfigMap.get(AreaDao.class).clone();
        areaDaoConfig.initIdentityScope(type);

        facilityDaoConfig = daoConfigMap.get(FacilityDao.class).clone();
        facilityDaoConfig.initIdentityScope(type);

        inspectionDaoConfig = daoConfigMap.get(InspectionDao.class).clone();
        inspectionDaoConfig.initIdentityScope(type);

        lineDaoConfig = daoConfigMap.get(LineDao.class).clone();
        lineDaoConfig.initIdentityScope(type);

        checkNowDaoConfig = daoConfigMap.get(CheckNowDao.class).clone();
        checkNowDaoConfig.initIdentityScope(type);

        resourceDaoConfig = daoConfigMap.get(ResourceDao.class).clone();
        resourceDaoConfig.initIdentityScope(type);

        areaDao = new AreaDao(areaDaoConfig, this);
        facilityDao = new FacilityDao(facilityDaoConfig, this);
        inspectionDao = new InspectionDao(inspectionDaoConfig, this);
        lineDao = new LineDao(lineDaoConfig, this);
        checkNowDao = new CheckNowDao(checkNowDaoConfig, this);
        resourceDao = new ResourceDao(resourceDaoConfig, this);

        registerDao(Area.class, areaDao);
        registerDao(Facility.class, facilityDao);
        registerDao(Inspection.class, inspectionDao);
        registerDao(Line.class, lineDao);
        registerDao(CheckNow.class, checkNowDao);
        registerDao(Resource.class, resourceDao);
    }
    
    public void clear() {
        areaDaoConfig.clearIdentityScope();
        facilityDaoConfig.clearIdentityScope();
        inspectionDaoConfig.clearIdentityScope();
        lineDaoConfig.clearIdentityScope();
        checkNowDaoConfig.clearIdentityScope();
        resourceDaoConfig.clearIdentityScope();
    }

    public AreaDao getAreaDao() {
        return areaDao;
    }

    public FacilityDao getFacilityDao() {
        return facilityDao;
    }

    public InspectionDao getInspectionDao() {
        return inspectionDao;
    }

    public LineDao getLineDao() {
        return lineDao;
    }

    public CheckNowDao getCheckNowDao() {
        return checkNowDao;
    }

    public ResourceDao getResourceDao() {
        return resourceDao;
    }

}
